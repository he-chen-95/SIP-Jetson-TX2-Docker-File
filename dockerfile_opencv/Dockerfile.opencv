# Get base image
FROM charleshe1995/tx1-cudabase:1.0

ENV DEBIAN_FRONTEND noninteractive
ENV ARCH=arm64

### Upgrade all installed apt packages to the latest versions (optional)
RUN apt-get -y update && apt-get -y dist-upgrade

### Update gcc apt package to the latest version (highly recommended)
RUN apt-get install --only-upgrade g++-5 cpp-5 gcc-5

# Install required apt packages
### Install dependencies based on the Jetson Installing OpenCV Guide
### Install dependencies for gstreamer stuffs
### Install additional dependencies according to the pyimageresearch article
### Install Qt5 dependencies
RUN apt-get update --fix-missing && apt-get install -qy \
	    build-essential make cmake cmake-curses-gui \
            g++ libavformat-dev libavutil-dev \
            libswscale-dev libv4l-dev libeigen3-dev \
            libglew-dev libgtk2.0-dev

RUN apt-get update --fix-missing && apt-get install -qy \ 
            libjpeg8-dev libjpeg-turbo8-dev libtiff5-dev \
            libjasper-dev libpng12-dev libavcodec-dev

RUN apt-get update --fix-missing && apt-get install -qy \ 
            libxvidcore-dev libx264-dev libgtk-3-dev \
            libatlas-base-dev gfortran

RUN apt-get install -qy qt5-default

### Install dependencies for python3
RUN apt-get install -qy python3-dev python3-pip python3-tk
RUN pip3 install numpy && pip3 install matplotlib
### Modify matplotlibrc (line #41) as 'backend      : TkAgg'
COPY ./matplotlibrc.py35 /usr/local/lib/python3.5/dist-packages/matplotlib/mpl-data/matplotlibrc

### Also install dependencies for python2. Note that I install numpy with pip,
### so that I'd be using a newer version of numpy than the apt-get package
RUN apt-get install -qy python-dev python-pip python-tk
RUN pip2 install numpy && pip2 install matplotlib
### Modify matplotlibrc (line #41) as 'backend      : TkAgg'
COPY ./matplotlibrc.py27 /usr/local/lib/python2.7/dist-packages/matplotlib/mpl-data/matplotlibrc


###modify /usr/local/cuda/include/cuda_gl_interop.h and fix the symbolic link of libGL.so.
COPY ./cuda_gl_interop.h.original /usr/local/cuda/include/cuda_gl_interop.h
WORKDIR /usr/lib/aarch64-linux-gnu/
RUN ln -sf tegra/libGL.so libGL.so

##add some missing app
RUN apt-get update --fix-missing && apt-get install -qy \
        vim wget

# Download, build and install opencv 3.2.0
RUN \   
        mkdir -p /src && \
	cd /src && \
	wget https://github.com/opencv/opencv/archive/3.4.0.tar.gz -O opencv-3.4.0.tar.gz && \
	tar zxf opencv-3.4.0.tar.gz && rm -f opencv-3.4.0.tar.gz && \
	cd opencv-3.4.0 && mkdir build && cd build && \
	cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local \
        -D WITH_CUDA=ON -D CUDA_ARCH_BIN="6.2" -D CUDA_ARCH_PTX="" \
        -D WITH_CUBLAS=ON -D ENABLE_FAST_MATH=ON -D CUDA_FAST_MATH=ON \
        -D ENABLE_NEON=ON -D WITH_LIBV4L=ON -D BUILD_TESTS=OFF \
        -D BUILD_PERF_TESTS=OFF -D BUILD_EXAMPLES=OFF \
        -D WITH_QT=ON -D WITH_OPENGL=ON .. && \
        make -j"$(nproc)" && make install && \
        cd /src && rm -rf opencv-3.4.0

##config and cleanup
RUN ldconfig && \
    apt-get clean && apt-get autoremove && \
    rm -rf /var/lib/lib/lists/* tmp/* ~/*
